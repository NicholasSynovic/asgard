---
  - name: "Configure Ubuntu (SUDO)"
    hosts: [localhost]
    connection: local

    tasks:
    - name: "Create NFS Mount points"
      file:
        path: "{{ item }}"
        state: directory
      loop:
        - /mnt/asgard

    # - name: "Update APT Cache"
    #   apt:
    #     update_cache: yes
    #     autoclean: true

    # - name: "Upgrade Packages"
    #   apt:
    #     upgrade: safe
    #     autoremove: true
    #     purge: true

    # - name: "Upgrade System Packages"
    #   apt:
    #     upgrade: full
    #     autoremove: true
    #     purge: true

    # - name: "Upgrade Distribution"
    #   apt:
    #     upgrade: dist
    #     autoremove: true
    #     purge: true

    # - name: "Update APT Cache"
    #   apt:
    #     update_cache: yes
    #     autoclean: true

    # - name: "Install Utilities"
    #   apt:
    #     name: ["unzip", "curl", "zip", "software-properties-common", "build-essential", "procps", "file", "git"]

    # - name: "Install avahi"
    #   apt:
    #     name: ["avahi-daemon"]

    # - name: "Install NFS"
    #   apt:
    #     name: ["nfs-kernel-server"]

    # - name: "Install dnsmasq"
    #   apt:
    #     name: ["dnsmasq", "dnsutils", "ldnsutils"]

    - name: "Enable avahi-daemon"
      service:
        name: avahi-daemon
        state: started

    # - name: "Backup dnsmasq configuration files [0]"
    #   copy:
    #     src: /etc/resolv.conf
    #     dest: /etc/resolv.conf.backup
    #     backup: yes

    # - name: "Backup dnsmasq configuration files [1]"
    #   copy:
    #     src: /etc/host.conf
    #     dest: /etc/host.conf.backup
    #     backup: yes

    # - name: "Backup dnsmasq configuration files [2]"
    #   copy:
    #     src: /etc/dnsmasq.conf
    #     dest: /etc/dnsmasq.conf.backup
    #     backup: yes

    #NEW as of 2/17

    - name: "UFW subnet connection"
      ufw:
        rule: allow
        src: 192.168.102.0/24

    - name: "Disable systemd-resolved"
      ansible.builtin.systemd:
        name: systemd-resolved
        enabled: no

    - name: "Restart dnsmasq"
      ansible.builtin.systemd:
        name: dnsmasq
        state: restarted

    - name: "Check dnsmasq status"
      service_facts:

    #if first statement doesn't work switch commented out line

    - debug:
        var: ansible_facts.services['dnsmasq'][status]
        #var: ansible_facts.services['dnsmasq']

    #NEW as of 2/23

    - name: "Setup shared folder"
      shell:
        executable: /bin/bash
        cmd: "sudo rm -r /mnt/asgard"

    - name: "Setup shared folder"
      shell:
        executable: /bin/bash
        cmd: "sudo mkdir /mnt/asgard"

    - name: "Setup shared folder"
      shell:
        executable: /bin/bash
        cmd: "sudo chown nobody:nogroup /mnt/asgard"

    - name: "Setup shared folder"
      shell:
        executable: /bin/bash
        cmd: "sudo chmod 777 /mnt/asgard"

    - name: "Expose shared folder to the subnet"
      shell:
        executable: /bin/bash
        cmd: "sudo cp /etc/exports /etc/exports.backupd"

    - name: "Expose shared folder to the subnet"
      shell:
        executable: /bin/bash
        cmd: "echo \"/mnt/asgard 192.168.102.0/24(rw,sync,no_subtree_check)\" | sudo tee /etc/exports"

    - name: "Restart nfs-kernel-server"
      ansible.builtin.systemd:
        name: nfs-kernel-server
        state: restarted

    - name: "Check nfs-kernel-server status"
      service_facts:

    #if first statement doesn't work switch commented out line
    #if both dnsmasq and nfs-kernel-server cannot check status rewrite ansible command to perform systemctl restart and status in shell

    - debug:
        var: ansible_facts.services['nfs-kernel-server'][status]
        #var: ansible_facts.services['nfs-kernel-server']


    - name: "Display all exported file systems"
      shell:
        executable: /bin/bash
        cmd: "sudo exportfs -a"
